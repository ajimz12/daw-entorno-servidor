--- USER ---

id
username
password
role

--- PLAYLIST ---

id
playlist_title
id_user

--- SONG ---

id
song_title
author_name
duration
id_playlist

---


<-- RELACIONES --> 

PLAYLIST -- SONG | Relacion muchos a muchos
USER -- PLAYLIST | Relacion 1 a muchos



------------------------------------------------------ SQL 

-- Tabla Usuarios
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role ENUM('normal', 'admin') NOT NULL
);

-- Tabla Listas de Reproducción
CREATE TABLE playlists (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    user_id INT NOT NULL,
    totalDuration TIME DEFAULT '00:00:00',
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Tabla Canciones
CREATE TABLE songs (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    author VARCHAR(100) NOT NULL,
    duration INT NOT NULL,
    urlFile VARCHAR(255) NOT NULL,
    user_id INT NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Tabla intermedia Lista-Canción (N:M)
CREATE TABLE song_playlist (
    id INT AUTO_INCREMENT PRIMARY KEY,
    playlist_id INT NOT NULL,
    song_id INT NOT NULL,
    FOREIGN KEY (playlist_id) REFERENCES playlists(id),
    FOREIGN KEY (song_id) REFERENCES songs(id)
);

-- Tabla Favoritas (relación entre Usuarios y Listas)
CREATE TABLE favorites (
    id_favorite INT AUTO_INCREMENT,
    id_user INT NOT NULL,
    id_playlist INT NOT NULL,
    PRIMARY KEY (id_favorite, id_user, id_playlist),
    FOREIGN KEY (id_user) REFERENCES users(id),
    FOREIGN KEY (id_playlist) REFERENCES playlists(id)
);

